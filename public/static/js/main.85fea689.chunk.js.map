{"version":3,"sources":["components/Header.js","contex/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","utils/api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","type","onClick","onCardDelete","src","link","alt","name","onCardLike","length","Main","avatar","onEditAvatar","onEditProfile","about","onAddPlace","cards","map","onCardClick","Footer","PopupWithForm","isOpen","onSubmit","noValidate","onClose","title","children","buttonText","ImagePopup","createdAt","like","api","options","this","baseUrl","headers","res","ok","json","Promise","reject","Error","status","fetch","then","_response","userName","userAbout","method","body","JSON","stringify","userAvatar","cardName","cardLink","cardId","b","authorization","EditProfilePopup","useState","setName","description","setDescription","useEffect","e","preventDefault","onUpdateUser","id","required","minLength","maxLength","value","onChange","target","EditAvatarPopup","avatarRef","useRef","current","onUpdateAvatar","placeholder","ref","AddPlacePopup","setTitle","setLink","App","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setAvatarPopupOpen","isImagePopupOpen","setImagePopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","closeAllPopups","all","getInitialCards","getUserInfo","values","initialCards","userData","catch","err","console","log","Provider","changeLikeCardStatus","newCard","newCards","c","deleteCard","filter","sendUserInfo","sendUserAvatar","postNewCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85fea689.chunk.js","sourcesContent":["export default function Header() {\n    return (\n        <header className=\"header\">\n            <div className=\"header__logo\"></div>\n        </header>\n    )\n}","\nimport React from 'react';\n// Создайте файл src/contexts/CurrentUserContext.js и экспортируйте из него новый объект контекста.\nexport const CurrentUserContext = React.createContext();","import {CurrentUserContext} from '../contex/CurrentUserContext';\nimport React from \"react\";\n\nexport function Card(props) {\n    // Подписываемся на контекст\n    const currentUser = React.useContext(CurrentUserContext);\n    // Определяем, являемся ли мы владельцем текущей карточки\n    const isOwn = props.card.owner._id === currentUser._id;\n    // Создаём переменную, которую после зададим в `className` для кнопки удаления\n    const cardDeleteButtonClassName = (\n        `button button_type_delete ${isOwn ? '' : 'button_hidden'}`\n    );\n\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\n\n    // Создаём переменную, которую после зададим в `className` для кнопки лайка\n    const cardLikeButtonClassName = `button button_type_like ${isLiked ? 'button_liked' : ''}`;\n\n    return (\n        <li className=\"card__element\">\n            <div className=\"card\">\n                <button className={cardDeleteButtonClassName} type=\"button\" onClick={() => props.onCardDelete(props.card)}></button>\n                <img\n                    className=\"photo-grid__item\"\n                    src={props.card.link}\n                    alt=\"Картинка, которая иллюстрирует название\"\n                    onClick={() => props.onClick(props.card)}\n                />\n                <div className=\"photo-grid__caption\">\n                    <h2 className=\"photo-grid__title\">{props.card.name}</h2>\n                    <div className=\"photo-grid__wrapper\">\n                        <button onClick={() => props.onCardLike(props.card)} className={cardLikeButtonClassName} type=\"button\"></button>\n                        <span className=\"photo-grid__like-counter\">{props.card.likes.length}</span>\n                    </div>\n                </div>\n            </div>\n        </li>\n    )\n}","import React from 'react';\nimport {Card} from \"./Card\";\nimport {CurrentUserContext} from '../contex/CurrentUserContext';\n\nexport default function Main(props) {\n    // Подписываемся на контекст\n    const currentUser = React.useContext(CurrentUserContext);\n\n    return (\n        <main className=\"content\">\n            <section className=\"profile\">\n                <div className=\"profile__description\">\n                    <div className=\"profile__avatar\">\n                        <img\n                            className=\"profile__picture\"\n                            src={currentUser.avatar}\n                            alt=\"Фотография Жака-Ив Кусто\"\n                        />\n                        <button className=\"button botton_type_avatar\" type=\"button\"\n                                onClick={props.onEditAvatar}></button>\n                    </div>\n                    <div className=\"profile__text\">\n                        <div className=\"profile__wrapper\">\n                            <h1 className=\"profile__title\">{currentUser.name}</h1>\n                            <button className=\"button button_type_edit\" type=\"button\"\n                                    onClick={props.onEditProfile}></button>\n                        </div>\n                        <p className=\"profile__subtitle\">{currentUser.about}</p>\n                    </div>\n                </div>\n                <button className=\"button button_type_add\" type=\"button\" onClick={props.onAddPlace}></button>\n            </section>\n            <section className=\"photo-grid\">\n                <ul className=\"photo-grid__list\">\n                    {props.cards.map((card, i) => <Card card={card} key={i} onClick={props.onCardClick}\n                                                  onCardLike={props.onCardLike} onCardDelete={props.onCardDelete}/>)}\n                </ul>\n            </section>\n        </main>\n    )\n}","export default function Footer() {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__author\">© 2020 Mesto Russia</p>\n        </footer>\n    )\n}\n\n","import React from \"react\";\n\nexport function PopupWithForm(props) {\n    return (\n        <div className={`popup popup_type_${props.name} ${props.isOpen ? 'popup_opened' : ''}`}>\n            <form onSubmit={props.onSubmit} className=\"popup__container\" name={`${props.name}`} noValidate>\n                <button className=\"button button_type_close\" type=\"button\" onClick={props.onClose}></button>\n                <h2 className=\"popup__title\">{props.title}</h2>\n                <fieldset className=\"form\">\n                {props.children}\n                <button className=\"button button_type_submit\">{props.buttonText}</button>\n                </fieldset>\n            </form>\n        </div>\n    );\n}","import React from \"react\";\n\nexport function ImagePopup(props) {\n    return (\n        <div className={`popup popup_type_fig ${props.isOpen ? 'popup_opened' : ''}`}>\n            <figure className=\"popup__figure\">\n                <button className=\"button button_type_close\" type=\"button\" onClick={props.onClose}></button>\n                <img\n                    className=\"popup__img\"\n                    src={props.card ? props.card.link : ''}\n                    alt={props.card ? `Картинка с изображением ${props.card.name}` : ''}\n                />\n                <figcaption\n                    className=\"popup__figcaption popup__figcaption-text\">{props.card ? props.card.name : ''}</figcaption>\n                <figcaption\n                    className=\"popup__figcaption popup__figcaption-owner\">{props.card ? props.card.owner.name : ''}</figcaption>\n                <figcaption\n                    className=\"popup__figcaption popup__figcaption-date\">{props.card ? props.card.createdAt : ''}</figcaption>\n                <figcaption className=\"popup__figcaption popup__figcaption-who\">Кому нравится?</figcaption>\n                <figcaption\n                    className=\"popup__figcaption popup__figcaption-likes\">{props.card ? props.card.likes.map((like, i) =>\n                    <div key={i}>{like.name}</div>) : \"\"}</figcaption>\n            </figure>\n        </div>\n    );\n}","class Api {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n    this.headers = options.headers;\n  }\n\n  _response(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(new Error(`Ошибка: ${res.status}`));\n  }\n\n  getUserInfo() {\n    return fetch(`${this.baseUrl}/users/me`, {\n      headers: this.headers,\n    }).then(this._response);\n  }\n\n  sendUserInfo(userName, userAbout) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        name: userName,\n        about: userAbout,\n      }),\n    }).then(this._response);\n  }\n\n  sendUserAvatar(userAvatar) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: userAvatar,\n      }),\n    }).then(this._response);\n  }\n\n  getInitialCards() {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: \"GET\",\n      headers: this.headers,\n    }).then(this._response);\n  }\n\n  postNewCard(cardName, cardLink) {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this.headers,\n      body: JSON.stringify({\n        name: cardName,\n        link: cardLink,\n      }),\n    }).then(this._response);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this.baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this.headers,\n    }).then(this._response);\n  }\n\n  addLike(cardId) {\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: this.headers,\n    }).then(this._response);\n  }\n\n  removeLike(cardId) {\n    return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: this.headers,\n    }).then(this._response);\n  }\n\n  changeLikeCardStatus(_id, b) {\n    if (b) {\n      return fetch(`${this.baseUrl}/cards/likes/${_id}`, {\n        method: \"PUT\",\n        headers: this.headers,\n      }).then(this._response);\n    }\n    else {\n      return fetch(`${this.baseUrl}/cards/likes/${_id}`, {\n        method: \"DELETE\",\n        headers: this.headers,\n      }).then(this._response);\n    }\n  }\n}\n\n// Создаем экземпляр класса АПИ с нашими настройками\nexport const api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-16\",\n  headers: {\n    authorization: \"2cbbf139-db5f-40de-8d4c-6c77fbe4b91c\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n","import {PopupWithForm} from \"./PopupWithForm\";\nimport React from \"react\";\nimport {CurrentUserContext} from '../contex/CurrentUserContext';\n\nexport function EditProfilePopup(props) {\n    // Подписка на контекст\n    const currentUser = React.useContext(CurrentUserContext);\n    // добавьте стейт-переменные name и description и привяжите их к полям ввода, сделав их управляемыми\n    const [name, setName]= React.useState(\"\");\n    const [description, setDescription]= React.useState(\"\");\n\n    const handleNameChange = (e) => {\n        setName(e.target.value);\n    }\n    const handleDescriptionChange = (e) => {\n        setDescription(e.target.value);\n    }\n    function handleSubmit(e) {\n        // Запрещаем браузеру переходить по адресу формы\n        e.preventDefault();\n        // Передаём значения управляемых компонентов во внешний обработчик\n        props.onUpdateUser({\n            name,\n            about: description,\n        });\n    }\n    // После загрузки текущего пользователя из API\n    // его данные будут использованы в управляемых компонентах.\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser]);\n\n    return (<PopupWithForm onSubmit={handleSubmit} onClose={props.onClose} isOpen={props.isOpen} title='Редактировать профиль'\n                           name='profile' buttonText='Сохранить' children={\n\n        <>\n            <label className=\"form__field\">\n                <input\n                    type=\"text\"\n                    className=\"form__item form__item_el_name\"\n                    id=\"name\"\n                    name=\"name\"\n                    required\n                    minLength=\"2\"\n                    maxLength=\"40\"\n                    value={name || ''}\n                    onChange={handleNameChange}\n                />\n                <div className=\"form__error-text\" id=\"name-error\"></div>\n            </label>\n            <label className=\"form__field\">\n                <input\n                    type=\"text\"\n                    className=\"form__item form__item_el_job\"\n                    id=\"job\"\n                    name=\"job\"\n                    required\n                    minLength=\"2\"\n                    maxLength=\"200\"\n                    value={description || ''}\n                    onChange={handleDescriptionChange}\n                />\n                <div className=\"form__error-text\" id=\"job-error\"></div>\n            </label>\n        </>}/>)\n}\n","import {PopupWithForm} from \"./PopupWithForm\";\nimport React from \"react\";\n\nexport function EditAvatarPopup(props){\n\n    const avatarRef = React.useRef(0);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateAvatar({\n            avatar: avatarRef.current.value,\n        });\n    }\n\n    React.useEffect(() => {\n        avatarRef.current.value = \"\";\n    }, [props.isOpen]);\n\n    return(\n        <PopupWithForm onClose={props.onClose} isOpen={props.isOpen} title='Обновить аватар'\n                       onSubmit={handleSubmit} name='avatar' buttonText='Сохранить' children={<>\n            <label className=\"form__field\">\n                <input\n                    type=\"url\"\n                    className=\"form__item form__item_el_link\"\n                    id=\"link\"\n                    name=\"link\"\n                    placeholder=\"https://somewebsite.com/someimage.jpg\"\n                    required\n                    ref={avatarRef}\n                />\n                <div className=\"form__error-text\" id=\"link-error\"></div>\n            </label>\n        </>}/>\n    )\n}\n\n","import {PopupWithForm} from \"./PopupWithForm\";\nimport React from \"react\";\n\nexport function AddPlacePopup(props){\n\n    const [title, setTitle]= React.useState('');\n    const [link, setLink]= React.useState('');\n\n    function handleTitleChange(e) {\n        setTitle(e.target.value);\n    }\n    function handleLinkChange(e) {\n        setLink(e.target.value);\n    }\n\n    function handleSubmit(e){\n        e.preventDefault();\n        props.onAddPlace({\n            name: title,\n            link: link\n        })\n\n    }\n    React.useEffect(() => {\n        setTitle(\"\")\n        setLink(\"\")\n    }, [props.isOpen]);\n\n    return(\n        <PopupWithForm onSubmit={handleSubmit} onClose={props.onClose} isOpen={props.isOpen} title='Новое место' name='add'\n                       buttonText='Создать' children={\n            <>\n\n                <label className=\"form__field\">\n                    <input\n                        type=\"text\"\n                        className=\"form__item form__item_el_place\"\n                        id=\"place\"\n                        name=\"place\"\n                        placeholder=\"Название\"\n                        required\n                        minLength=\"1\"\n                        maxLength=\"30\"\n                        value={title}\n                        onChange={handleTitleChange}\n                    />\n                    <div className=\"form__error-text\" id=\"place-error\"></div>\n                </label>\n                <label className=\"form__field\">\n                    <input\n                        type=\"url\"\n                        className=\"form__item form__item_el_img\"\n                        id=\"img\"\n                        name=\"img\"\n                        placeholder=\"Ссылка на картинку\"\n                        required\n                        value={link}\n                        onChange={handleLinkChange}\n                    />\n                    <div className=\"form__error-text\" id=\"img-error\"></div>\n                </label>\n\n            </>}/>\n\n    )\n}","import Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport {PopupWithForm} from \"./PopupWithForm\";\nimport {ImagePopup} from \"./ImagePopup\";\nimport React from 'react';\nimport {api} from \"../utils/api\";\nimport {EditProfilePopup} from './EditProfilePopup';\nimport {EditAvatarPopup} from './EditAvatarPopup';\nimport {AddPlacePopup} from \"./AddPlacePopup\";\n//Импортируйте этот объект в App и используйте его провайдер\n\nimport {CurrentUserContext} from '../contex/CurrentUserContext';\n\n\nfunction App() {\n    // Создаем стейт-переменные попапов\n    const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false); // true или false\n    const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false); // true или false\n    const [isEditAvatarPopupOpen, setAvatarPopupOpen] = React.useState(false); // true или false\n    const [isImagePopupOpen, setImagePopupOpen] = React.useState(false); // true или false\n    // Создаем стейт-переменную выбранной карточки\n    const [selectedCard, setSelectedCard] = React.useState(null);\n    // Создайте стейт currentUser в корневом компоненте\n    const [currentUser, setCurrentUser] = React.useState({});\n    // Создаем стейт-переменные для массива карточек\n    const [cards, setCards] = React.useState([]);\n\n\n    React.useEffect(() => {\n        Promise.all([\n            //в Promise.all передаем массив промисов которые нужно выполнить\n            api.getInitialCards(),\n            api.getUserInfo()\n        ])\n            .then((values) => {\n                //попадаем сюда когда оба промиса будут выполнены\n                const [initialCards, userData] = values;\n                setCards(initialCards);\n                setCurrentUser(userData);\n                // у нас есть все нужные данные, отрисовываем страницу\n            })\n            .catch((err) => {\n                //попадаем сюда если один из промисов завершаться ошибкой\n                console.log(err);\n            });\n    }, [])\n\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n            // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n            const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n            // Обновляем стейт\n            setCards(newCards);\n        })\n            .catch((err) => {\n                //попадаем сюда если один из промисов завершаться ошибкой\n                console.log(err);\n            });\n    }\n\n    function handleCardDelete(card) {\n        // Снова проверяем, являемся ли мы владельцем карточки\n        const isOwn = card.owner._id === currentUser._id;\n\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.deleteCard(card._id, !isOwn).then(() => {\n            // Формируем новый массив на основе имеющегося, фильтраю по номеру карточки\n            const newCards = cards.filter((c) => c._id !== card._id);\n            // Обновляем стейт\n            setCards(newCards);\n        })\n            .catch((err) => {\n                //попадаем сюда если один из промисов завершаться ошибкой\n                console.log(err);\n            });\n\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n        setImagePopupOpen(true)\n    }\n\n    function handleEditAvatar() {\n        setAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick() {\n        setEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setAddPlacePopupOpen(true);\n    }\n\n    function handleUpdateUser({name, about}) {\n        api.sendUserInfo(name, about)\n            .then((res) => {\n                setCurrentUser(res)\n                closeAllPopups()\n            })\n            .catch((err) => console.log(err))\n    }\n\n    function handleUpdateAvatar({avatar}) {\n\n        api.sendUserAvatar(avatar)\n            .then((res) => {\n                setCurrentUser(res);\n                closeAllPopups();\n            })\n            .catch((err) => console.log(err))\n    }\n\n    function handleAddPlaceSubmit({name, link}) {\n        api.postNewCard(name, link)\n            .then((res) => {\n                setCards([res, ...cards]);\n                closeAllPopups();\n            })\n            .catch((err) => console.log(err))\n\n    }\n\n    function closeAllPopups() {\n        setAvatarPopupOpen(false)\n        setEditProfilePopupOpen(false);\n        setAddPlacePopupOpen(false);\n        setSelectedCard(null);\n        setImagePopupOpen(false)\n    }\n\n    return (\n        //«оберните» в него всё текущее содержимое корневого компонента\n        //В качестве значения контекста для провайдера используйте currentUser\n        <CurrentUserContext.Provider value={currentUser}>\n            <div>\n                <div className=\"page\">\n                    <Header/>\n                    <Main cards={cards} onCardLike={handleCardLike} onCardDelete={handleCardDelete}\n                          onEditAvatar={handleEditAvatar} onAddPlace={handleAddPlaceClick}\n                          onEditProfile={handleEditProfileClick} onCardClick={handleCardClick}/>\n                    <Footer/>\n                    <EditProfilePopup onUpdateUser={handleUpdateUser} isOpen={isEditProfilePopupOpen}\n                                      onClose={closeAllPopups}/>\n                    <EditAvatarPopup onUpdateAvatar={handleUpdateAvatar} isOpen={isEditAvatarPopupOpen}\n                                     onClose={closeAllPopups}/>\n                    <AddPlacePopup onAddPlace={handleAddPlaceSubmit} isOpen={isAddPlacePopupOpen}\n                                   onClose={closeAllPopups}/>\n                    <PopupWithForm onClose={closeAllPopups} title='Вы уверены?' name='confirm' buttonText='Да'/>\n                    <ImagePopup onClose={closeAllPopups} isOpen={isImagePopupOpen} card={selectedCard}/>\n                </div>\n\n\n            </div>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './pages/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}